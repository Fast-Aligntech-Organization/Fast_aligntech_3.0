<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fast.Api</name>
    </assembly>
    <members>
        <member name="M:Fast.Api.Controllers.CommentsController.Get">
            <summary>
            Obtiene todos los comentarios
            No requiere permisos especiales
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.CommentsController.Get(System.Int32)">
            <summary>
            Obtiene un comentario por el Id.
            No requiere permisos especiales
            </summary>
            <returns></returns> 
        </member>
        <member name="M:Fast.Api.Controllers.CommentsController.Post(Fast.Core.DTOs.OrdenCommentDto)">
            <summary>
            [Authorize]
            Crea un nuevo comentario generado por un usuario;
            Se requiere token
            </summary>
            <param Nombre="administer">Entidad a agregar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.CommentsController.Put(Fast.Core.DTOs.OrdenCommentDto)">
            <summary>
            [Authorize]
            Actualiza un comentario.
            Se requerira Token para acceder a la informacion, Ademas solo un usuario administrador o el propio
            usuario tendra accesso a modificar la informacion
            </summary>
            <param Nombre="entity">Entidad a actualizar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.CommentsController.Delete(System.Int32)">
            <summary>
            [Authorize]
            Elimina un comentario por su Id.
            Un comentario solo podra ser eliminado por el usuario que lo creo o por el administrador
            Ee requiere pasar el Token
            </summary>
            <param Nombre="id"></param>
            <returns>Devuelbe el resultado de la operacion solicitada.</returns>
        </member>
        <member name="T:Fast.Api.Controllers.GenericController`1">
            <summary> 
            Clase generica base que contiene toda la logica de interaccion de las entidades del negocio de la API Fast.
            Su implementacion con un tipo concreto debe ser establecidad para su correcto funcionamiento.
            </summary>
            <typeparam Nombre="TEntity">Entidad de negocio, esta debe ser una clase y poder ser instanciada, ademas implementar la interfaz <see cref="T:Fast.Core.Interfaces.IEntity"/>.</typeparam>
        </member>
        <member name="M:Fast.Api.Controllers.GenericController`1.#ctor(Fast.Core.Interfaces.IRepository{`0},Fast.Core.Interfaces.IValidatorService{`0},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Clase generica base que contiene toda la logica de interaccion de las entidades del negocio de la API Fast.
            </summary>
            <param Nombre="Repository">Contiene la logica y conexion a la base de datos</param>
            <param Nombre="service">Contiene servicios para la comprobacion de las correctas especificaciones y restricciones delas entidades</param>
        </member>
        <member name="M:Fast.Api.Controllers.GenericController`1.Get">
            <summary>
            Obtiene toda la informacion solicitada a la API de una entidad en concreto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericController`1.Get(System.Int32)">
            <summary>
            Obtiene la informacion de una entidad por su Id.
            </summary>
            <param Nombre="id">Numero unico de identificacion para cada Entidad.</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericController`1.Post(`0)">
            <summary>
            Agrega una entidad nueva a la coleccion correspondiente.
            </summary>
            <param Nombre="entity">Entidad a agregar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericController`1.Delete(System.Int32)">
            <summary>
            Elimina una entidad por su Id.
            </summary>
            <param Nombre="id"></param>
            <returns>Devuelbe el resultado de la operacion solicitada.</returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericController`1.Put(`0)">
            <summary>
            Actualiza una entidad existente.
            </summary>
            <param Nombre="entity">Entidad a actualizar</param>
            <returns></returns>
        </member>
        <member name="T:Fast.Api.Controllers.GenericDTOsController`2">
            <summary>
            Clase generica base que contiene toda la logica de interaccion de las entidades DTO del negocio de la API Fast.
            Su implementacion con un tipo concreto debe ser establecidad para su correcto funcionamiento.
            
            </summary>
            <typeparam Nombre="TEntity">Entidad de negocio</typeparam>
            <typeparam Nombre="TEntityDto">Entidad Dto protegida del negocio</typeparam>
        </member>
        <member name="M:Fast.Api.Controllers.GenericDTOsController`2.#ctor(Fast.Core.Interfaces.IRepository{`0},AutoMapper.IMapper,Microsoft.AspNetCore.Authorization.IAuthorizationService,Fast.Core.Interfaces.IValidatorService{`0})">
            <summary>
            Clase generica base que contiene toda la logica de interaccion de las entidades DTO del negocio de la API Fast.
            Su implementacion con un tipo concreto debe ser establecidad para su correcto funcionamiento.
            <typeparamref name="TEntity"/>  
            </summary>
            <param Nombre="Repository">Contiene la logica y conexion a la base de datos.</param>
            <param Nombre="mapper">Se encarga de mappear las propiedades entre entidades de negocio y Dtos.</param>
        </member>
        <member name="M:Fast.Api.Controllers.GenericDTOsController`2.Delete(System.Int32)">
            <summary>
            Elimina una entidad por su Id.
            </summary>
            <param Nombre="id"></param>
            <returns>Devuelbe el resultado de la operacion solicitada.</returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericDTOsController`2.Get">
            <summary>
            Obtiene toda la informacion solicitada a la API de una entidad Dto en concreto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericDTOsController`2.Get(System.Int32)">
            <summary>
            Obtiene la informacion de una entidad por su Id.
            </summary>
            <param Nombre="id">Numero unico de identificacion para cada Entidad.</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericDTOsController`2.Post(`1)">
            <summary>
            Agrega una entidad nueva a la coleccion correspondiente.
            </summary>
            <param Nombre="administer">Entidad a agregar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.GenericDTOsController`2.Put(`1)">
            <summary>
            Actualiza una entidad existente.
            </summary>
            <param Nombre="entity">Entidad a actualizar</param>
            <returns></returns>
        </member>
        <member name="T:Fast.Api.Controllers.OrdersController">
            <summary>
            Administra toda la logica de las ordenes
            </summary>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.UploadImage(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            [Authorize]
            Sube una imagen ligada a una orden.
            solo el usuario puede realizar modificaciones sobre su propia orden
            </summary>
            <param name="id"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.Comments(System.Int32)">
            <summary>
            Devuelve los comentarios por orden
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.Get">
            <summary>
            Obtiene toda la informacion solicitada a la API de una entidad Orden.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.Get(System.Int32)">
            <summary>
            Obtiene toda la informacion solicitada a la API de una entidad Orden por medio de su Id
            No requiere permisos especiales
            </summary>
            <param Nombre="id">Numero unico de identificacion para cada Entidad.</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.Post(Fast.Core.DTOs.OrdenDto)">
            <summary>
            [Authorize]
            Da de alta una orden nueva generada por un usuario;
            Una orden solo podra ser creada por un usuario registrada, se requiere token
            </summary>
            <param Nombre="administer">Entidad a agregar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.Put(Fast.Core.DTOs.OrdenDto)">
            <summary>
            [Authorize]
            Actualiza una Orden existente.
            La orden solo podra ser actualizada por el usuario que la creo
            para eso se requiere pasar el Token 
            </summary>
            <param Nombre="entity">Entidad a actualizar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.OrdersController.Delete(System.Int32)">
            <summary>
            [Authorize]
            Elimina una orden por su Id.
            La orden solo podra ser Eliminada por el usuario que la creo o por el administrador
            para eso se requiere pasar el Token
            </summary>
            <param Nombre="id"></param>
            <returns>Devuelbe el resultado de la operacion solicitada.</returns>
        </member>
        <member name="T:Fast.Api.Controllers.LoginController">
            <summary>
            Inicia sesion con el usuario especificado 
            </summary>
        </member>
        <member name="M:Fast.Api.Controllers.LoginController.Post(Fast.Core.Entities.UserLogin)">
            <summary>
            Inicia session y Token necesario para acceder a los demas acciones
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.SecurityControllers.SignUpController.Post(Fast.Core.DTOs.UsuarioSignUp)">
            <summary>
            Registra un usuario nuevo 
            </summary>
            <param name="security"></param>
            <returns></returns>
        </member>
        <member name="T:Fast.Api.Controllers.UsersController">
            <summary>
            Administra toda la logica de los usuarios
            </summary>
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Get">
            <summary>
            [Authorize]
            Obtiene todos los usuarios registrados 
            Se requerira Token para acceder a la informacion, Ademas solo un usuario administrador podra
            obtener acceso a toda la informacion de los usuarios
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Get(System.Int32)">
            <summary>
            [Authorize]
            Obtiene el usuario por el Id.
            Se requerira Token para acceder a la informacion, Ademas solo un usuario administrador o el propio
            usuario tendra accesso a la informacion
            </summary>
            <returns></returns> 
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.GetGoogleUUID(System.String)">
            <summary>
            Obtiene el usuario por el GoogleUUID;
            </summary>
            <returns></returns> 
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Post(Fast.Core.DTOs.UsuarioDto)">
            <summary>
            [Authorize]
            Crea un nuevo usuario
            obtener acceso a toda la informacion de los usuarios
            </summary>
            <returns></returns>    
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Put(Fast.Core.DTOs.UsuarioDto)">
            <summary>
            [Authorize]
            Actualiza la informacion de un usuario.
            Se requerira Token para acceder a la informacion, Ademas solo un usuario administrador o el propio
            usuario tendra accesso a modificar la informacion
            </summary>
            <param Nombre="entity">Entidad a actualizar</param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            [Authorize]
            Elimina un usuario por su Id.
            Se requerira Token para acceder a la informacion, Ademas solo un usuario administrador o el propio
            usuario tendra accesso a eliminar su cuenta
            </summary>
            <param Nombre="id"></param>
            <returns>Devuelbe el resultado de la operacion solicitada.</returns>
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.ChangePassword(System.Int32,Fast.Core.Entities.UserChangePassword)">
            <summary>
            [Authorize]
            Unica forma de modificar la contraseña de un usuario;
            Se requerira Token para acceder a la informacion, Ademas solo un usuario administrador o el propio
            usuario tendra accesso a cambiar la contraseña
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Comments(System.Int32)">
            <summary>
            Obtiene los comentarios que ha realizado un usuario en particular
            No requiere permisos especiales
            </summary>
            <param name="id">Id del usuario</param>
            <returns>La lista de comentarios y su calificacion</returns>
        </member>
        <member name="M:Fast.Api.Controllers.UsersController.Orders(System.Int32)">
            <summary>
            Obtiene las ordenes que un usuario en particular a pedido
            No requiere permisos especiales
            </summary>
            <param name="id">Id del usuario</param>
            <returns>Una lista de ordenes</returns>
        </member>
    </members>
</doc>
